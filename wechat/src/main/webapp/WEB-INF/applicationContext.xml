<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
        xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Service注入 start-->
    <context:component-scan base-package="cn.anson.wechat.service">
        <context:include-filter type="regex" expression=".*" />
    </context:component-scan>
    <!-- Service注入 end-->
    <bean id="sysConfig" class="cn.anson.wechat.util.SysConfig">
        <constructor-arg value="#{@props}"/>
    </bean>
    <jee:jndi-lookup id="props" jndi-name="java:comp/env/props"/>
    <!-- 从resin配置文件加载properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- 加载wechat_envirement.properties，在resin配置xml里定义  -->
                <value>file:#{@props}</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound"  value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="valueSeparator"  value=":=" />
    </bean>
    
    <!-- 配置数据库连接  从resin读取jndi资源 -->  
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/wechat"/>
    <jee:jndi-lookup id="idGenDataSource" jndi-name="jdbc/wechat"/>
    
    <!--MyBatis integration with Spring as define sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="cn.anson.wechat.entity" />
		<property name="configLocation" value="classpath:mybatis-configuration.xml"/>
		<!-- <property name="mapperLocations" value="classpath*:cn/com/ecointel/roomyi/authority/persistence/*.xml" /> -->
	</bean>
	
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.anson.wechat.mapper" />
<!-- 		<property name="markerInterface" value="cn.anson.wechat.mapper.BaseMapper"/> 指定接口-->
<!-- 		<property name="annotationClass" value="cn.anson.wechat.mapper.MybatisMapper"/> 自定义注解使用-->
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /><!-- 单数据源可不定义-->
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" p:sqlSessionFactory-ref="sqlSessionFactory"/>
    
    <bean class="cn.anson.wechat.util.SpringCtxUtils"/>
    
    <!-- 注解方式配置spring事务  start-->  
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="list*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="page*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="count*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="exists*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <!-- 切面配置事务 -->
    <aop:config>
        <aop:pointcut id="wechatService" expression="execution(* cn.anson.wechat.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="wechatService" />
    </aop:config>
    <!-- 注解方式配置spring事务  end-->
    <!-- 使用CGLib动态代理技术织入增强，如切面没有声明接口，则spring将自动使用CGLib动态代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>
